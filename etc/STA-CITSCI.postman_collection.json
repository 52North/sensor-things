{
	"info": {
		"_postman_id": "7f543e2c-5cee-4704-bd55-bdd383869177",
		"name": "STA CitizenScienceExtension",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "POST",
			"item": [
				{
					"name": "Observation with nested Group",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@iot.id\": \"testCSObservation\",\n    \"result\": \"52\",\n    \"phenomenonTime\": \"2099-03-11T17:55:09Z\",\n    \"FeatureOfInterest\": {\n        \"@iot.id\": \"foi\"\n    },\n    \"Datastream\": {\n        \"@iot.id\": \"testDatastream\"\n    },\n    \"ObservationRelations\": [\n        {\n            \"@iot.id\": \"testRelation\",\n            \"type\": \"root\",\n            \"Group\": {\n                \"@iot.id\": \"testGroup\",\n                \"name\": \"Test Group 1\",\n                \"description\": \"Test Group 1 description\"\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8081/sta/Observations",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Observations"
							]
						}
					},
					"response": []
				},
				{
					"name": "FeatureOfInterest",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@iot.id\": \"foi\",\n    \"name\": \"ITConformance27\",\n    \"description\": \"ITConfo2rmance7 FOI\",\n    \"encodingType\": \"application/vnd.geo+json\",\n    \"feature\": {\n    \t\"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"LineString\",\n        \"coordinates\": [\n          [0, 0.0], [52, 52]\n        ]\n      }\n    }\n}"
						},
						"url": {
							"raw": "localhost:8081/sta/FeaturesOfInterest",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"FeaturesOfInterest"
							]
						}
					},
					"response": []
				},
				{
					"name": "Full Test Harness",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@iot.id\": \"DemoThing\",\n    \"description\": \"This is the Lobby of the 52N HQ\",\n    \"name\": \"52N HQ Lobby\",\n    \"Locations\": [\n        {\n            \"@iot.id\": \"DemoLocation\",\n            \"name\": \"Location of 52N HQ\",\n            \"description\": \"Somewhere in the Loddenheide\",\n            \"encodingType\": \"application/vnd.geo+json\",\n            \"location\": {\n                \"type\": \"Feature\",\n                \"geometry\": {\n                    \"type\": \"Point\",\n                    \"coordinates\": [\n                        52,\n                        7\n                    ]\n                }\n            }\n        }\n    ],\n    \"Datastreams\": [\n        {\n            \"@iot.id\": \"DemoCSDatastream\",\n            \"name\": \"Air Temperature\",\n            \"description\": \"This Datastreams measures Air Temperature\",\n            \"unitOfMeasurement\": {\n                \"name\": \"degree Celsius\",\n                \"symbol\": \"°C\",\n                \"definition\": \"http://unitsofmeasure.org/ucum.html#para-30\"\n            },\n            \"observationType\": \"http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement\",\n            \"phenomenonTime\": \"2009-01-11T16:22:25.00Z/2011-08-21T08:32:10.00Z\",\n            \"ObservedProperty\": {\n                \"@iot.id\": \"DemoAirTemp\",\n                \"name\": \"Air Temperature\",\n                \"definition\": \"http://sweet.jpl.nasa.gov/ontology/property.owl#AirTemperature\",\n                \"description\": \"The air temperature is the temperature of the air.\"\n            },\n            \"Sensor\": {\n                \"@iot.id\": \"DemoDS18B2022\",\n                \"name\": \"sensor 1\",\n                \"description\": \"sensor 1\",\n                \"encodingType\": \"application/pdf\",\n                \"metadata\": \"http://datasheets.maxim-ic.com/en/ds/DS18B20.pdf\"\n            },\n            \"License\": {\n                \"@iot.id\": \"DemoMIT\",\n                \"name\": \"Demo MIT License\",\n                \"definition\": \"https://opensource.org/licenses/MIT\"\n            },\n            \"Project\": {\n                \"@iot.id\": \"DemoProject\",\n                \"name\": \"Demo Project.\",\n                \"description\": \"This is a demo project\",\n                \"runtime\": \"2020-06-25T03:42:02-02:00\"\n            },\n            \"Party\": {\n                \"@iot.id\": \"DemoParty\",\n                \"nickName\": \"Demo Party nickName\",\n                \"role\": \"individual\"\n            },\n            \"Observations\": [\n                {\n                    \"@iot.id\": \"DemoCSObservation\",\n                    \"result\": \"52\",\n                    \"phenomenonTime\": \"2099-03-11T17:55:09Z\",\n                    \"FeatureOfInterest\": {\n                        \"@iot.id\": \"DemoFOI\",\n                        \"name\": \"DemoFeatureOfInterest\",\n                        \"description\": \"DemoFeatureOfInterest\",\n                        \"encodingType\": \"application/vnd.geo+json\",\n                        \"feature\": {\n                            \"type\": \"Feature\",\n                            \"geometry\": {\n                                \"type\": \"LineString\",\n                                \"coordinates\": [\n                                    [\n                                        0,\n                                        0.0\n                                    ],\n                                    [\n                                        52,\n                                        52\n                                    ]\n                                ]\n                            }\n                        }\n                    },\n                    \"ObservationRelations\": [\n                        {\n                            \"@iot.id\": \"DemoRelation\",\n                            \"type\": \"root\",\n                            \"Group\": {\n                                \"@iot.id\": \"DemoGroup\",\n                                \"name\": \"Demo Group 1\",\n                                \"description\": \"Demo Group 1 description\"\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:8081/sta/Things",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Things"
							]
						}
					},
					"response": []
				},
				{
					"name": "Full Test Harness with Linking via @iot.id",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@iot.id\": \"DemoThing2\",\n    \"description\": \"This is the Lobby of the 52N HQ\",\n    \"name\": \"52N HQ Lobby\",\n    \"Locations\": [\n        {\n            \"@iot.id\": \"DemoLocation2\",\n            \"name\": \"Location of 52N HQ\",\n            \"description\": \"Somewhere in the Loddenheide\",\n            \"encodingType\": \"application/vnd.geo+json\",\n            \"location\": {\n                \"type\": \"Feature\",\n                \"geometry\": {\n                    \"type\": \"Point\",\n                    \"coordinates\": [\n                        52,\n                        7\n                    ]\n                }\n            }\n        }\n    ],\n    \"Datastreams\": [\n        {\n            \"@iot.id\": \"DemoCSDatastream2\",\n            \"name\": \"Air Temperature\",\n            \"description\": \"This Datastreams measures Air Temperature\",\n            \"unitOfMeasurement\": {\n                \"name\": \"degree Celsius\",\n                \"symbol\": \"°C\",\n                \"definition\": \"http://unitsofmeasure.org/ucum.html#para-30\"\n            },\n            \"observationType\": \"http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement\",\n            \"phenomenonTime\": \"2009-01-11T16:22:25.00Z/2011-08-21T08:32:10.00Z\",\n            \"ObservedProperty\": {\n                \"@iot.id\": \"DemoAirTemp\"\n            },\n            \"Sensor\": {\n                \"@iot.id\": \"DemoDS18B2022\"\n            },\n            \"License\": {\n                \"@iot.id\": \"DemoMIT\"\n            },\n            \"Project\": {\n                \"@iot.id\": \"DemoProject\"\n            },\n            \"Party\": {\n                \"@iot.id\": \"DemoParty\"\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "http://localhost:8081/sta/Things",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Things"
							]
						}
					},
					"response": []
				},
				{
					"name": "License",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@iot.id\": \"DemoMIT\",\n    \"name\": \"MIT License\",\n    \"definition\": \"https://opensource.org/licenses/MIT\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/sta/Licenses",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Licenses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Project",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@iot.id\": \"DemoProject\",\n    \"name\": \"Demo Project.\",\n    \"description\": \"This is a demo project\",\n    \"runtime\": \"2020-06-25T03:42:02-02:00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/sta/Projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Parties",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@iot.id\": \"DemoParty\",\n    \"nickName\": \"Demo Party nickName\",\n    \"role\": \"individual\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/sta/Parties",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Parties"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PATCH",
			"item": [
				{
					"name": "License",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"PATCHed MIT License\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/sta/Licenses(DemoMIT)",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Licenses(DemoMIT)"
							]
						}
					},
					"response": []
				},
				{
					"name": "Project",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"PATCHed name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/sta/Projects(DemoProject)",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Projects(DemoProject)"
							]
						}
					},
					"response": []
				},
				{
					"name": "Party",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nickName\": \"PATCHed\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/sta/Parties(DemoParty)",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Parties(DemoParty)"
							]
						}
					},
					"response": []
				},
				{
					"name": "ObservationRelation",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"PATCHed name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/sta/ObservationRelations(DemoRelation)",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"ObservationRelations(DemoRelation)"
							]
						}
					},
					"response": []
				},
				{
					"name": "ObservationGroup",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"PATCHed name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/sta/ObservationGroups(DemoGroup)",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"ObservationGroups(DemoGroup)"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6d4cd33c-e51e-49ea-b835-7848619fe3dd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5c0664e8-b10b-4ee9-8682-a4e1c4064251",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "License",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"PATCHed MIT License\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/sta/Licenses(DemoMIT)",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Licenses(DemoMIT)"
							]
						}
					},
					"response": []
				},
				{
					"name": "Project",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"PATCHed name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/sta/Projects(DemoProject)",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Projects(DemoProject)"
							]
						}
					},
					"response": []
				},
				{
					"name": "Party",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nickName\": \"PATCHed\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/sta/Parties(DemoParty)",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Parties(DemoParty)"
							]
						}
					},
					"response": []
				},
				{
					"name": "ObservationRelation",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"PATCHed name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/sta/ObservationRelations(DemoRelation)",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"ObservationRelations(DemoRelation)"
							]
						}
					},
					"response": []
				},
				{
					"name": "ObservationGroup",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"PATCHed name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8081/sta/ObservationGroups(DemoGroup)",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"ObservationGroups(DemoGroup)"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ca0172a3-0daa-410c-ab78-73fadd26d1a2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "317b168f-d88f-4f3e-bcef-57cd32987752",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "GET Root Collections",
			"item": [
				{
					"name": "Parties Collection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/Parties",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Parties"
							]
						}
					},
					"response": []
				},
				{
					"name": "Licenses Collection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/Licenses",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Licenses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Projects Collection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/Projects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "ObservationGroups Collection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/ObservationGroups",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"ObservationGroups"
							]
						}
					},
					"response": []
				},
				{
					"name": "ObservationRelations Collection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/ObservationRelations",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"ObservationRelations"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "GET Collections with $filter",
			"item": [
				{
					"name": "empty response",
					"item": [
						{
							"name": "Observations $filter Datastream",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Observations?$filter=Datastream/id eq 'invalid'",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Observations"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Datastream/id eq 'invalid'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Observations $filter FOI",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Observations?$filter=FeatureOfInterest/id eq 'invalid'",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Observations"
									],
									"query": [
										{
											"key": "$filter",
											"value": "FeatureOfInterest/id eq 'invalid'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Observations $filter ObservationRelation",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Observations?$filter=ObservationRelations/id eq 'invalid'",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Observations"
									],
									"query": [
										{
											"key": "$filter",
											"value": "ObservationRelations/id eq 'invalid'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Datastreams $filter License",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Datastreams?$filter=License/id eq 'invalid'",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Datastreams"
									],
									"query": [
										{
											"key": "$filter",
											"value": "License/id eq 'invalid'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Datastreams $filter Party",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Datastreams?$filter=Party/id eq 'invalid'",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Datastreams"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Party/id eq 'invalid'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Datastreams $filter Project",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Datastreams?$filter=Project/id eq 'invalid'",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Datastreams"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Project/id eq 'invalid'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Datastreams $filter Sensor",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Datastreams?$filter=Sensor/id eq 'invalid'",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Datastreams"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Sensor/id eq 'invalid'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Datastreams $filter Thing",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Datastreams?$filter=Thing/id eq 'invalid'",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Datastreams"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Thing/id eq 'invalid'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Datastreams $filter ObservedProperty",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Datastreams?$filter=ObservedProperty/id eq 'invalid'",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Datastreams"
									],
									"query": [
										{
											"key": "$filter",
											"value": "ObservedProperty/id eq 'invalid'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Parties $filter Datastreams",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Parties?$filter=Datastreams/id eq 'invalid'",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Parties"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Datastreams/id eq 'invalid'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Licenses $filter Datastreams",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Licenses?$filter=Datastreams/id eq 'invalid'",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Licenses"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Datastreams/id eq 'invalid'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Projects $filter Datastreams",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3acb5c90-761e-40d6-876d-61f57cc88dc4",
										"exec": [
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"@iot.count\"]).to.eql(0);",
											"    pm.expect(jsonData[\"value\"]).to.eql([]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Projects?$filter=Datastreams/id eq 'invalid'",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Projects"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Datastreams/id eq 'invalid'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Things $filter Datastreams",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "56495981-2a0c-461d-b4ae-6af40efa4ad4",
										"exec": [
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"@iot.count\"]).to.eql(0);",
											"    pm.expect(jsonData[\"value\"]).to.eql([]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Things?$filter=Datastreams/id eq 'invalid'",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Things"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Datastreams/id eq 'invalid'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Sensors $filter Datastreams",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd1151f9-d91a-42a4-a07f-a40345f7528a",
										"exec": [
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"@iot.count\"]).to.eql(0);",
											"    pm.expect(jsonData[\"value\"]).to.eql([]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Sensors?$filter=Datastreams/id eq 'invalid'",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Sensors"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Datastreams/id eq 'invalid'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ObservedProperties $filter Datastreams",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c8d4393d-8c88-459f-aefc-9ed9ce7fae37",
										"exec": [
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"@iot.count\"]).to.eql(0);",
											"    pm.expect(jsonData[\"value\"]).to.eql([]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/ObservedProperties?$filter=Datastreams/id eq 'invalid'",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"ObservedProperties"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Datastreams/id eq 'invalid'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ObservationGroups $filter ObservationRelation",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/ObservationGroups?$filter=ObservationRelations/id eq 'invalid'",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"ObservationGroups"
									],
									"query": [
										{
											"key": "$filter",
											"value": "ObservationRelations/id eq 'invalid'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ObservationRelations $filter ObservationGroups",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/ObservationRelations?$filter=ObservationGroup/id eq 'invalid'",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"ObservationRelations"
									],
									"query": [
										{
											"key": "$filter",
											"value": "ObservationGroup/id eq 'invalid'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ObservationRelations $filter Observation",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/ObservationRelations?$filter=Observation/id eq 'invalid'",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"ObservationRelations"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Observation/id eq 'invalid'"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "expanded response",
					"item": [
						{
							"name": "Observations $filter Datastream",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Observations?$filter=Datastream/id eq 'DemoCSDatastream'&$expand=Datastream",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Observations"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Datastream/id eq 'DemoCSDatastream'"
										},
										{
											"key": "$expand",
											"value": "Datastream"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Observations $filter ObservationRelation",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Observations?$filter=ObservationRelations/id eq 'DemoRelation'&$expand=ObservationRelations",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Observations"
									],
									"query": [
										{
											"key": "$filter",
											"value": "ObservationRelations/id eq 'DemoRelation'"
										},
										{
											"key": "$expand",
											"value": "ObservationRelations"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Datastreams $filter License",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Datastreams?$filter=License/id eq 'DemoMIT'&$expand=License",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Datastreams"
									],
									"query": [
										{
											"key": "$filter",
											"value": "License/id eq 'DemoMIT'"
										},
										{
											"key": "$expand",
											"value": "License"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Datastreams $filter Party",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Datastreams?$filter=Party/id eq 'DemoParty'&$expand=Party",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Datastreams"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Party/id eq 'DemoParty'"
										},
										{
											"key": "$expand",
											"value": "Party"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Datastreams $filter Project",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Datastreams?$filter=Project/id eq 'DemoProject'&$expand=Project",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Datastreams"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Project/id eq 'DemoProject'"
										},
										{
											"key": "$expand",
											"value": "Project"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Datastreams $filter Sensor",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Datastreams?$filter=Sensor/id eq 'DemoDS18B2022'&$expand=Sensor",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Datastreams"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Sensor/id eq 'DemoDS18B2022'"
										},
										{
											"key": "$expand",
											"value": "Sensor"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Datastreams $filter Thing",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Datastreams?$filter=Thing/id eq 'DemoThing'&$expand=Thing",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Datastreams"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Thing/id eq 'DemoThing'"
										},
										{
											"key": "$expand",
											"value": "Thing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Datastreams $filter ObservedProperty",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Datastreams?$filter=ObservedProperty/id eq 'DemoAirTemp'&$expand=ObservedProperty",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Datastreams"
									],
									"query": [
										{
											"key": "$filter",
											"value": "ObservedProperty/id eq 'DemoAirTemp'"
										},
										{
											"key": "$expand",
											"value": "ObservedProperty"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Parties $filter Datastreams",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Parties?$filter=Datastreams/id eq 'DemoCSDatastream'&$expand=Datastreams",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Parties"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Datastreams/id eq 'DemoCSDatastream'"
										},
										{
											"key": "$expand",
											"value": "Datastreams"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Licenses $filter Datastreams",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Licenses?$filter=Datastreams/id eq 'DemoCSDatastream'&$expand=Datastreams",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Licenses"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Datastreams/id eq 'DemoCSDatastream'"
										},
										{
											"key": "$expand",
											"value": "Datastreams"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Projects $filter Datastreams",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "564cd40d-a31f-430d-8b9a-5d9edc6f9642",
										"exec": [
											"pm.test(\"Your test name\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"@iot.count\"]).to.eql(0);",
											"    pm.expect(jsonData[\"value\"]).to.eql([]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Projects?$filter=Datastreams/id eq 'DemoCSDatastream'&$expand=Datastreams",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Projects"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Datastreams/id eq 'DemoCSDatastream'"
										},
										{
											"key": "$expand",
											"value": "Datastreams"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ObservationGroups $filter ObservationRelation",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/ObservationGroups?$filter=ObservationRelations/id eq 'DemoRelation'&$expand=ObservationRelations",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"ObservationGroups"
									],
									"query": [
										{
											"key": "$filter",
											"value": "ObservationRelations/id eq 'DemoRelation'"
										},
										{
											"key": "$expand",
											"value": "ObservationRelations"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ObservationRelations $filter ObservationGroups",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/ObservationRelations?$filter=ObservationGroup/id eq 'DemoGroup'&$expand=ObservationGroup",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"ObservationRelations"
									],
									"query": [
										{
											"key": "$filter",
											"value": "ObservationGroup/id eq 'DemoGroup'"
										},
										{
											"key": "$expand",
											"value": "ObservationGroup"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ObservationRelations $filter Observation",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/ObservationRelations?$filter=Observation/id eq 'DemoCSObservation'&$expand=Observation",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"ObservationRelations"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Observation/id eq 'DemoCSObservation'"
										},
										{
											"key": "$expand",
											"value": "Observation"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "ObservedProperties $filter Datastreams",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cdb926bd-a9b9-4925-98e8-3800ad07706a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/ObservedProperties?$filter=Datastreams/id eq 'DemoCSDatastream'&$expand=Datastreams",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"ObservedProperties"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Datastreams/id eq 'DemoCSDatastream'"
										},
										{
											"key": "$expand",
											"value": "Datastreams"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Sensors $filter Datastreams",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f06e6172-2488-4c5d-8004-c858c5f9d020",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Sensors?$filter=Datastreams/id eq 'DemoCSDatastream'&$expand=Datastreams",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Sensors"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Datastreams/id eq 'DemoCSDatastream'"
										},
										{
											"key": "$expand",
											"value": "Datastreams"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Things $filter Datastreams",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f96b0df7-d9b1-4319-8890-26348c1a9222",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/Things?$filter=Datastreams/id eq 'DemoCSDatastream'&$expand=Datastreams",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"Things"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Datastreams/id eq 'DemoCSDatastream'"
										},
										{
											"key": "$expand",
											"value": "Datastreams"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "FOI $filter Observations",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6966b311-647f-4563-99ab-269bba420a53",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8081/sta/FeaturesOfInterest?$filter=Observations/id eq 'DemoCSObservation'&$expand=Observations",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8081",
									"path": [
										"sta",
										"FeaturesOfInterest"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Observations/id eq 'DemoCSObservation'"
										},
										{
											"key": "$expand",
											"value": "Observations"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "05c4318a-313d-40a2-a74d-fb3848420151",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "03d0c0ba-5061-4a02-875e-864ba54f133c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "GET Root Collections with $expand",
			"item": [
				{
					"name": "Observations Collection $expand",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/Observations?$expand=ObservationRelations,Datastream,FeatureOfInterest",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Observations"
							],
							"query": [
								{
									"key": "$expand",
									"value": "ObservationRelations,Datastream,FeatureOfInterest"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Datastreams Collection $expand",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/Datastreams?$expand=Sensor,Thing,ObservedProperty,License,Observations,Party,Project",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Datastreams"
							],
							"query": [
								{
									"key": "$expand",
									"value": "Sensor,Thing,ObservedProperty,License,Observations,Party,Project"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Parties Collection $expand",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/Parties?$expand=Datastreams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Parties"
							],
							"query": [
								{
									"key": "$expand",
									"value": "Datastreams"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Licenses Collection $expand",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/Licenses?$expand=Datastreams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Licenses"
							],
							"query": [
								{
									"key": "$expand",
									"value": "Datastreams"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Projects Collection $expand",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/Projects?$expand=Datastreams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Projects"
							],
							"query": [
								{
									"key": "$expand",
									"value": "Datastreams"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Thing Collection $expand",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/Things?$expand=Datastreams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Things"
							],
							"query": [
								{
									"key": "$expand",
									"value": "Datastreams"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sensor Collection $expand",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/Sensors?$expand=Datastreams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Sensors"
							],
							"query": [
								{
									"key": "$expand",
									"value": "Datastreams"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ObservedProperty Collection $expand",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/ObservedProperties?$expand=Datastreams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"ObservedProperties"
							],
							"query": [
								{
									"key": "$expand",
									"value": "Datastreams"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ObservationGroups Collection $expand",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/ObservationGroups?$expand=ObservationRelations",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"ObservationGroups"
							],
							"query": [
								{
									"key": "$expand",
									"value": "ObservationRelations"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "ObservationRelations Collection $expand",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/ObservationRelations?$expand=Observation,ObservationGroup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"ObservationRelations"
							],
							"query": [
								{
									"key": "$expand",
									"value": "Observation,ObservationGroup"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "GET Related Collections",
			"item": [
				{
					"name": "ObservationRelations via Observation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/Observations(DemoCSObservation)/ObservationRelations",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Observations(DemoCSObservation)",
								"ObservationRelations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Datastreams via Licenses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/Licenses(DemoMIT)/Datastreams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Licenses(DemoMIT)",
								"Datastreams"
							]
						}
					},
					"response": []
				},
				{
					"name": "Datastreams via Parties",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/Parties(DemoParty)/Datastreams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Parties(DemoParty)",
								"Datastreams"
							]
						}
					},
					"response": []
				},
				{
					"name": "Datastreams via Projects",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/Projects(DemoProject)/Datastreams",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Projects(DemoProject)",
								"Datastreams"
							]
						}
					},
					"response": []
				},
				{
					"name": "Datastreams via Observations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/Observations(DemoCSObservation)/Datastream",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Observations(DemoCSObservation)",
								"Datastream"
							]
						}
					},
					"response": []
				},
				{
					"name": "ObservationRelations via ObservationGroup",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/ObservationGroups(testGroup)/ObservationRelations",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"ObservationGroups(testGroup)",
								"ObservationRelations"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "GET Related Entities",
			"item": [
				{
					"name": "Observation via  ObservationRelation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/ObservationRelations(DemoRelation)/Observation",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"ObservationRelations(DemoRelation)",
								"Observation"
							]
						}
					},
					"response": []
				},
				{
					"name": "ObservationGroup via  ObservationRelation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/ObservationRelations(DemoRelation)/ObservationGroup",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"ObservationRelations(DemoRelation)",
								"ObservationGroup"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "GET Entities",
			"item": [
				{
					"name": "GET Project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/Projects(DemoProject)",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Projects(DemoProject)"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET License",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/sta/Licenses(DemoMIT)",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8081",
							"path": [
								"sta",
								"Licenses(DemoMIT)"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}